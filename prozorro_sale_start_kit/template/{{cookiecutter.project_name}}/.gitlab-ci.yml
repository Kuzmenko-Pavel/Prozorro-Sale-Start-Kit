include:
  - project: 'prozorro-sale/ci-build-box'
    file: '/template-ci.yml'

stages:
  - lint
  - build
  - test
  - publish
  - deploy
  - cleanup

image: registry-gitlab.prozorro.sale/prozorro-sale/ci-build-box

variables:
  FULL_NAME_IMAGE: registry-gitlab.prozorro.sale/prozorro-sale/billing
  IMAGE: prozorro-sale-billing:$CI_COMMIT_SHORT_SHA
  IMAGE_TEST: prozorro-sale-billing:$CI_COMMIT_SHORT_SHA-test
  PIPELINE_TRIGGER_URL: "https://gitlab.prozorro.sale/api/v4/projects/16/trigger/pipeline"

code-style-check:
  extends: .lint-template
  stage: lint

helm-lint:
  extends: .helm-lint-template
  stage: lint

build-helm-package:
  stage: build
  extends: .build-helm-package-template
  artifacts:
    paths:
      - prozorro-sale-billing-*.tgz
  only:
    - master
    - tags

build-new-image:
  extends: .build-new-image-template
  stage: build

test-integration:
  extends: .test-integration-template
  stage: test
  artifacts:
    paths:
      - .coverage.integration

test-unit:
  extends: .test-unit-template
  stage: test
  artifacts:
    paths:
      - .coverage.unit

publish-coverage-report:
  stage: publish
  tags:
    - kube
  script:
    - make publish-coverage
  artifacts:
    name: coverage-report-$CI_COMMIT_SHORT_SHA
    paths:
      - cover-html

push-to-registry:
  extends: .push-to-registry-template
  stage: publish
  only:
    - master

push-tagged-image:
  extends: .push-to-registry-template
  variables:
    TAG: $CI_COMMIT_REF_SLUG
  stage: publish
  only:
    - tags

push-helm-package:
  extends: .push-helm-package-template
  stage: publish
  only:
    - master
    - tags

cleanup-test-images:
  stage: cleanup
  tags:
    - kube
  script:
    - make remove-compose
    - docker rmi -f $FULL_NAME_IMAGE || true
    - docker rmi -f $IMAGE_TEST || true
  when: always

deploy-dev:
  extends: .deploy-dev-kubernetes-template
  stage: deploy
  only:
#    - master
    - tags


# --- DEMO JOBS ---

deploy-demo:
  extends: .push-to-registry-template
  image: registry-gitlab.prozorro.sale/prozorro-sale/prozorro-deployment/rg-cluster
  stage: deploy
  variables:
    TAG: "demo"
  after_script:
    - kubectl config set-credentials prozorro.deploy --token=$RG_DEV_TOKEN
    - kubectl -n prozorro-dev apply -f demo-k8s.yaml
    - kubectl -n prozorro-dev rollout restart deployment prozorro-dev-prozorro-sale-billing-demo
  when: manual
